package org.optaplanner.examples.conferencescheduling.domain;
import static org.junit.Assert.*;
import java.util.List;
import org.junit.After;
import org.junit.AfterClass;
import org.junit.Before;
import org.junit.BeforeClass;
import org.junit.Test;
import org.optaplanner.core.api.domain.constraintweight.ConstraintConfigurationProvider;
import org.optaplanner.core.api.domain.solution.PlanningEntityCollectionProperty;
import org.optaplanner.core.api.domain.solution.PlanningScore;
import org.optaplanner.core.api.domain.solution.drools.ProblemFactCollectionProperty;
import org.optaplanner.core.api.score.buildin.hardmediumsoft.HardMediumSoftScore;

public class ConferenceSolutionTest 
{
    private String conferenceName;
    @ConstraintConfigurationProvider
    private ConferenceConstraintConfiguration constraintConfiguration;

    @ProblemFactCollectionProperty
    private List<TalkType> talkTypeList;

    @ProblemFactCollectionProperty
    private List<Timeslot> timeslotList;

    @ProblemFactCollectionProperty
    private List<Room> roomList;

    @ProblemFactCollectionProperty
    private List<Speaker> speakerList;

    @PlanningEntityCollectionProperty
    private List<Talk> talkList;

    @PlanningScore
    private HardMediumSoftScore score = null;
	
	@BeforeClass
	public static void setUpBeforeClass() throws Exception 
	{
		ConferenceSolution cs = new ConferenceSolution();
	}

	@AfterClass
	public static void tearDownAfterClass() throws Exception 
	{
		
	}

	@Before
	public void setUp() throws Exception 
	{
		
	}

	@After
	public void tearDown() throws Exception 
	{
		
	}

	/*
	@Test
	public void test() 
	{
		fail("Not yet implemented");
	}
    */
	
	@Override
	@Test
    public String toString() 
	{
        return conferenceName;
    }

    // ************************************************************************
    // Simple getters and setters
    // ************************************************************************

	@Test
    public String getConferenceName() 
	{
        return conferenceName;
    }

	@Test
    public void setConferenceName(String conferenceName) 
	{
        this.conferenceName = conferenceName;
    }

	@Test
    public ConferenceConstraintConfiguration getConstraintConfiguration() 
	{
        return constraintConfiguration;
    }

	@Test
    public void setConstraintConfiguration(ConferenceConstraintConfiguration constraintConfiguration) 
	{
        this.constraintConfiguration = constraintConfiguration;
    }

	@Test
    public List<TalkType> getTalkTypeList() 
	{
        return talkTypeList;
    }

	@Test
    public void setTalkTypeList(List<TalkType> talkTypeList) 
	{
        this.talkTypeList = talkTypeList;
    }

	@Test
    public List<Timeslot> getTimeslotList() 
	{
        return timeslotList;
    }

	@Test
    public void setTimeslotList(List<Timeslot> timeslotList) 
	{
        this.timeslotList = timeslotList;
    }

	@Test
    public List<Room> getRoomList() 
	{
        return roomList;
    }

	@Test
    public void setRoomList(List<Room> roomList) 
	{
        this.roomList = roomList;
    }

	@Test
    public List<Speaker> getSpeakerList() 
	{
        return speakerList;
    }

	@Test
    public void setSpeakerList(List<Speaker> speakerList) 
	{
        this.speakerList = speakerList;
    }

	@Test
    public List<Talk> getTalkList() 
	{
        return talkList;
    }

	@Test
    public void setTalkList(List<Talk> talkList) 
	{
        this.talkList = talkList;
    }

	@Test
    public HardMediumSoftScore getScore() 
	{
        return score;
    }

	@Test
    public void setScore(HardMediumSoftScore score) 
	{
        this.score = score;
    }

	@Test
    public ConferenceSolution withConstraintConfiguration(ConferenceConstraintConfiguration constraintConfiguration) 
	{
        this.constraintConfiguration = constraintConfiguration;
        return this;
    }

	@Test
    public ConferenceSolution withTalkTypeList(List<TalkType> talkTypeList) 
	{
        this.talkTypeList = talkTypeList;
        return this;
    }

	@Test
    public ConferenceSolution withTimeslotList(List<Timeslot> timeslotList) 
	{
        this.timeslotList = timeslotList;
        return this;
    }

	@Test
    public ConferenceSolution withRoomList(List<Room> roomList) 
	{
        this.roomList = roomList;
        return this;
    }

    public ConferenceSolution withSpeakerList(List<Speaker> speakerList) 
    {
        this.speakerList = speakerList;
        return this;
    }

    @Test
    public ConferenceSolution withTalkList(List<Talk> talkList) 
    {
        this.talkList = talkList;
        return this;
    }
}
