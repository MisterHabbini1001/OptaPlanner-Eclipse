<?xml version="1.0" encoding="UTF-8"?><testrun name="TaskTest" project="optaplanner standard" tests="39" started="39" failures="0" errors="3" ignored="0">
  <testsuite name="org.optaplanner.examples.taskassigning.domain.TaskTest" time="0.001">
    <testcase name="testgetCode" classname="org.optaplanner.examples.taskassigning.domain.TaskTest" time="0.0"/>
    <testcase name="testsetPreviousTaskOrEmployee" classname="org.optaplanner.examples.taskassigning.domain.TaskTest" time="0.0"/>
    <testcase name="testsetLatitude" classname="org.optaplanner.examples.taskassigning.domain.TaskTest" time="0.0"/>
    <testcase name="testsetLongitude" classname="org.optaplanner.examples.taskassigning.domain.TaskTest" time="0.0"/>
    <testcase name="testgetLatitude" classname="org.optaplanner.examples.taskassigning.domain.TaskTest" time="0.0"/>
    <testcase name="testgetLabel" classname="org.optaplanner.examples.taskassigning.domain.TaskTest" time="0.0"/>
    <testcase name="testgetTitle" classname="org.optaplanner.examples.taskassigning.domain.TaskTest" time="0.0"/>
    <testcase name="testsetPriority" classname="org.optaplanner.examples.taskassigning.domain.TaskTest" time="0.0"/>
    <testcase name="testgetPriority" classname="org.optaplanner.examples.taskassigning.domain.TaskTest" time="0.0"/>
    <testcase name="testgetStartTime" classname="org.optaplanner.examples.taskassigning.domain.TaskTest" time="0.0"/>
    <testcase name="testgetToolText" classname="org.optaplanner.examples.taskassigning.domain.TaskTest" time="0.0">
      <error>java.lang.NullPointerException&#13;
	at org.optaplanner.examples.taskassigning.domain.TaskTest.testgetToolText(TaskTest.java:384)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)&#13;
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)&#13;
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:89)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:41)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:541)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:763)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:463)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:209)&#13;
&#13;
</error>
    </testcase>
    <testcase name="testtoString" classname="org.optaplanner.examples.taskassigning.domain.TaskTest" time="0.0"/>
    <testcase name="testsetPinned" classname="org.optaplanner.examples.taskassigning.domain.TaskTest" time="0.0"/>
    <testcase name="testsetResponsTime" classname="org.optaplanner.examples.taskassigning.domain.TaskTest" time="0.0"/>
    <testcase name="testsetTaskType" classname="org.optaplanner.examples.taskassigning.domain.TaskTest" time="0.0"/>
    <testcase name="testgetTaskType" classname="org.optaplanner.examples.taskassigning.domain.TaskTest" time="0.0"/>
    <testcase name="testgetReadyTime" classname="org.optaplanner.examples.taskassigning.domain.TaskTest" time="0.0"/>
    <testcase name="testsetCode" classname="org.optaplanner.examples.taskassigning.domain.TaskTest" time="0.0"/>
    <testcase name="testsetCustomer" classname="org.optaplanner.examples.taskassigning.domain.TaskTest" time="0.0"/>
    <testcase name="testsetStartTime" classname="org.optaplanner.examples.taskassigning.domain.TaskTest" time="0.0"/>
    <testcase name="testgetTravelDuration" classname="org.optaplanner.examples.taskassigning.domain.TaskTest" time="0.0"/>
    <testcase name="testisPinned" classname="org.optaplanner.examples.taskassigning.domain.TaskTest" time="0.0"/>
    <testcase name="testgetTravelHomeDuration" classname="org.optaplanner.examples.taskassigning.domain.TaskTest" time="0.0">
      <error>java.lang.Error: Unresolved compilation problem: 
	The method testgetAirTimeTo() in the type TaskTest is not applicable for the arguments (double, double, double, double)
&#13;
	at org.optaplanner.examples.taskassigning.domain.TaskTest.testgetTravelHomeDuration(TaskTest.java:422)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)&#13;
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)&#13;
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:89)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:41)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:541)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:763)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:463)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:209)&#13;
&#13;
</error>
    </testcase>
    <testcase name="testgetAffinity" classname="org.optaplanner.examples.taskassigning.domain.TaskTest" time="0.0"/>
    <testcase name="testgetCustomer" classname="org.optaplanner.examples.taskassigning.domain.TaskTest" time="0.0"/>
    <testcase name="testgetAirTimeTo" classname="org.optaplanner.examples.taskassigning.domain.TaskTest" time="0.0"/>
    <testcase name="testsetEmployee" classname="org.optaplanner.examples.taskassigning.domain.TaskTest" time="0.0"/>
    <testcase name="testgetEmployee" classname="org.optaplanner.examples.taskassigning.domain.TaskTest" time="0.0"/>
    <testcase name="testgetResponsTime" classname="org.optaplanner.examples.taskassigning.domain.TaskTest" time="0.0"/>
    <testcase name="testgetLongitude" classname="org.optaplanner.examples.taskassigning.domain.TaskTest" time="0.0"/>
    <testcase name="testgetEndTime" classname="org.optaplanner.examples.taskassigning.domain.TaskTest" time="0.0"/>
    <testcase name="testgetIndexInTaskType" classname="org.optaplanner.examples.taskassigning.domain.TaskTest" time="0.0"/>
    <testcase name="testsetReadyTime" classname="org.optaplanner.examples.taskassigning.domain.TaskTest" time="0.0"/>
    <testcase name="testgetPreviousTaskOrEmployee" classname="org.optaplanner.examples.taskassigning.domain.TaskTest" time="0.0"/>
    <testcase name="testsetDuration" classname="org.optaplanner.examples.taskassigning.domain.TaskTest" time="0.0"/>
    <testcase name="testsetIndexInTaskType" classname="org.optaplanner.examples.taskassigning.domain.TaskTest" time="0.0"/>
    <testcase name="testgetDuration" classname="org.optaplanner.examples.taskassigning.domain.TaskTest" time="0.0"/>
    <testcase name="testsetTitle" classname="org.optaplanner.examples.taskassigning.domain.TaskTest" time="0.0"/>
    <testcase name="testgetMissingSkillCount" classname="org.optaplanner.examples.taskassigning.domain.TaskTest" time="0.001">
      <error>java.lang.NullPointerException&#13;
	at org.optaplanner.examples.taskassigning.domain.TaskTest.testgetMissingSkillCount(TaskTest.java:285)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)&#13;
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)&#13;
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:89)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:41)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:541)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:763)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:463)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:209)&#13;
&#13;
</error>
    </testcase>
  </testsuite>
</testrun>
