package org.optaplanner.examples.cheaptime.domain;
import static org.junit.Assert.*;

import java.util.List;

import org.junit.After;
import org.junit.AfterClass;
import org.junit.Before;
import org.junit.BeforeClass;
import org.junit.Test;
import org.optaplanner.core.api.domain.solution.PlanningEntityCollectionProperty;
import org.optaplanner.core.api.domain.solution.PlanningScore;
import org.optaplanner.core.api.domain.solution.drools.ProblemFactCollectionProperty;
import org.optaplanner.core.api.domain.solution.drools.ProblemFactProperty;
import org.optaplanner.core.api.domain.valuerange.ValueRangeProvider;
import org.optaplanner.core.api.score.buildin.hardmediumsoftlong.HardMediumSoftLongScore;
import org.optaplanner.persistence.xstream.api.score.buildin.hardmediumsoftlong.HardMediumSoftLongScoreXStreamConverter;

import com.thoughtworks.xstream.annotations.XStreamConverter;

public class CheapTimeSolutionTest {
    private int timeResolutionInMinutes;
    private int globalPeriodRangeFrom; // Inclusive
    private int globalPeriodRangeTo; // Exclusive
    private List<Resource> resourceList;
    private List<Machine> machineList;
    private List<MachineCapacity> machineCapacityList;
    private List<Task> taskList;
    private List<TaskRequirement> taskRequirementList;
    private List<PeriodPowerPrice> periodPowerPriceList;
    private List<TaskAssignment> taskAssignmentList;
    
	@BeforeClass
	public static void setUpBeforeClass() throws Exception {
	}

	@AfterClass
	public static void tearDownAfterClass() throws Exception {
	}

	@Before
	public void setUp() throws Exception {
	}

	@After
	public void tearDown() throws Exception {
	}

	/*
	@Test
	public void test() 
	{
		fail("Not yet implemented");
	}
	*/

	@XStreamConverter(HardMediumSoftLongScoreXStreamConverter.class)
    private HardMediumSoftLongScore score;

	@Test
    public void testgetTimeResolutionInMinutes() {
        System.out.println(timeResolutionInMinutes);
    }

	@Test
    public void setTimeResolutionInMinutes() {
        this.timeResolutionInMinutes = timeResolutionInMinutes;
    }

	@Test
    public void getGlobalPeriodRangeFrom() {
    	System.out.println(globalPeriodRangeFrom);
    }

	@Test
    public void setGlobalPeriodRangeFrom() {
        this.globalPeriodRangeFrom = globalPeriodRangeFrom;
    }

	@Test
    public void getGlobalPeriodRangeTo() {
    	System.out.println(globalPeriodRangeTo);
    }

	@Test
    public void setGlobalPeriodRangeTo() {
        this.globalPeriodRangeTo = globalPeriodRangeTo;
    }

	@Test
    @ProblemFactCollectionProperty
    public void getResourceList() {
    	System.out.println(resourceList);
    }

	@Test
    @ValueRangeProvider(id = "machineRange")
    @ProblemFactCollectionProperty
    public void getMachineList() {
    	System.out.println(machineList);
    }

	@Test
    public void setMachineList() {
        this.machineList = machineList;
    }

	@Test
    public void setResourceList() {
        this.resourceList = resourceList;
    }

	@Test
    @ProblemFactCollectionProperty
    public void getMachineCapacityList() {
    	System.out.println(machineCapacityList);
    }

	@Test
    public void setMachineCapacityList() {
        this.machineCapacityList = machineCapacityList;
    }

	@Test
    @ProblemFactCollectionProperty
    public void getTaskList() {
    	System.out.println(taskList);
    }

	@Test
    public void setTaskList() {
        this.taskList = taskList;
    }

	@Test
    @ProblemFactCollectionProperty
    public void getTaskRequirementList() {
    	System.out.println(taskRequirementList);
    }

	@Test
    public void setTaskRequirementList() {
        this.taskRequirementList = taskRequirementList;
    }

	@Test
    @ProblemFactCollectionProperty
    public void getPeriodPowerPriceList() {
    	System.out.println(periodPowerPriceList);
    }

	@Test
    public void setPeriodPowerPriceList() {
        this.periodPowerPriceList = periodPowerPriceList;
    }

	@Test
    @PlanningEntityCollectionProperty
    public void getTaskAssignmentList() {
    	System.out.println(taskAssignmentList);
    }

	@Test
    public void setTaskAssignmentList() {
        this.taskAssignmentList = taskAssignmentList;
    }

	@Test
    @PlanningScore
    public void getScore() {
    	System.out.println(score);
    }

	@Test
    public void setScore() {
        this.score = score;
    }

	@Test
    @ProblemFactProperty
    public CheapTimeSolution getCheapTimeSolution() {
        return this;
    }
}
